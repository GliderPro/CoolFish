//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoolFishBotNS.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CoolFishBotNS.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if IsFishingLoot() then 
        ///	local numLootItems = GetNumLootItems()
        ///	for i=1,numLootItems do 
        ///	local Link = GetLootSlotLink(i)
        ///	local _,name, lootQuantity ,Quality  = GetLootSlotInfo(i)
        ///	
        ///		if Link and Quality and name and lootQuantity then
        ///
        ///		_, _, id = string.find(Link, &quot;item:(%d+):&quot;)
        ///			if Quality &gt;= LootQuality then
        ///				if LootLeftOnly or DontLootLeft then 
        ///					match = ItemsList[name] or ItemsList[id]
        ///                
        ///					if (match) and LootLeftOnly then 
        ///						LootSlot(i) 
        ///						ConfirmLootSlot(i)
        ///					 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DoLoot {
            get {
                return ResourceManager.GetString("DoLoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LureName = nil;
        ///
        ///local Lures = {
        ///	-- Consumable Lures
        ///	[67404] = true,
        ///	[6529] = true,
        ///	[6811] = true,
        ///	[6530] = true,
        ///	[6532] = true,
        ///	[7307] = true,
        ///	[6533] = true,
        ///	[62673] = true,
        ///	[46006] = true,
        ///	[34861] = true,
        ///	[68049] = true,
        ///	[118391] = true; -- Worm Supreme
        ///};
        ///
        ///local equipLures = {
        ///	-- Hats
        ///	[33820] = true, -- Weather
        ///	[117405] = true, -- Nat&apos;s Drinking Hat
        ///	[88710] = true, -- Nat&apos;s Hat
        ///	-- Poles
        ///	[116826] = true, -- Draenic Fishing Pole
        ///	[116825] = true -- Savage Fishing Pole
        ///};
        ///
        ///-- Check to see [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetLureName {
            get {
                return ResourceManager.GetString("GetLureName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AppliedBait = nil;
        ///if not BaitSpellId or not BaitItemId then
        ///	return;
        ///end
        ///
        ///if BaitSpellId ~= 1 then
        ///    local name = GetSpellInfo(BaitSpellId);  
        ///    local _,_,_,_,_,_,expires = UnitBuff(&quot;player&quot;,name); 
        ///    if expires then 
        ///	    expires = expires-GetTime();
        ///	    if expires &lt;= 10 then
        ///		    expires = true
        ///	    else
        ///		    expires = false
        ///	    end
        ///    else
        ///	    expires = true
        ///    end
        ///
        ///    if expires then
        ///	    -- Check to see if we have any baits in our inventory
        ///	    for i=0,4 do 
        ///		    local numberOfSlots =  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NeedToApplyBait {
            get {
                return ResourceManager.GetString("NeedToApplyBait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UsedRumsey = nil;
        ///local name = GetSpellInfo(45694); 
        ///_,_,_,_,_,_,expires = UnitBuff(&quot;player&quot;, name); 
        ///
        ///
        ///if expires then 
        ///	expires = expires-GetTime()
        ///	if expires &gt; 30 then
        ///		return;
        ///	end
        ///end
        ///
        ///for i=0,4 do 
        ///	local numberOfSlots = GetContainerNumSlots(i); 
        ///	for j=1,numberOfSlots do 
        ///		local itemid = GetContainerItemID(i,j)
        ///		if itemid == 34832 then
        ///				name = GetItemInfo(34832); 
        ///				RunMacroText(&quot;/use  &quot; .. name);
        ///				UsedRumsey = 1;
        ///				return;
        ///		end        
        ///	end 
        ///end.
        /// </summary>
        internal static string NeedToRunUseRumsey {
            get {
                return ResourceManager.GetString("NeedToRunUseRumsey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UsedRaft = nil;
        ///local name = nil; 
        ///
        ///local hasBuff = function(id)
        ///	local spell = GetSpellInfo(id);
        ///	_,_,_,_,_,_,expires = UnitBuff(&quot;player&quot;, spell);
        ///	if not expires or expires-GetTime() &lt; 30 then
        ///		return false;
        ///	end
        ///	return true;
        ///end
        ///
        ///if hasBuff(124036) or hasBuff(546) or hasBuff(3714) or hasBuff(5697) or hasBuff(1706) then
        ///	return;
        ///end
        ///
        ///-- See if we have the water walking raft and use it instead of spells
        ///for i=0,4 do 
        ///	local numberOfSlots = GetContainerNumSlots(i); 
        ///	for j=1,numberOfSlots do 
        ///		local item [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UseRaft {
            get {
                return ResourceManager.GetString("UseRaft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if not CoolFrame then
        ///CoolFrame = CreateFrame(&quot;FRAME&quot;);
        ///end
        ///
        ///
        ///NewMessage = 0; 
        ///CoolFrame:RegisterEvent(&quot;CHAT_MSG_WHISPER&quot;);
        ///CoolFrame:RegisterEvent(&quot;CHAT_MSG_BN_WHISPER&quot;);
        ///
        ///CoolFrame:SetScript(&quot;OnEvent&quot;,
        ///function(self,event,msg,author,language,status,msgid,unk,chatline,senderguid)
        ///NewMessage = 1; 
        ///Message = msg;
        ///Author = author;
        ///
        ///end);.
        /// </summary>
        internal static string WhisperNotes {
            get {
                return ResourceManager.GetString("WhisperNotes", resourceCulture);
            }
        }
    }
}
